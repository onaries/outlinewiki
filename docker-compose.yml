services:

  outline:
    image: outlinewiki/outline:0.73.1
    env_file: ./docker.env
    restart: unless-stopped
    command: sh -c "yarn db:migrate --env production-ssl-disabled && yarn start"
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - storage

  redis:
    image: redis
    env_file: ./docker.env
    restart: unless-stopped
    ports:
      - "6379:6379"
    # volumes:
    #   - ./redis.conf:/redis.conf
    # command: ["redis-server", "/redis.conf"]
    container_name: outline-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres:14
    env_file: ./docker.env
    restart: unless-stopped
    ports:
      - "5434:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
    container_name: outline-postgres
    healthcheck:
      test: ["CMD", "pg_isready -U user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: outline

  storage:
    image: minio/minio
    #env_file: ./docker.env
    restart: unless-stopped
    container_name: outline-minio
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=
      - MINIO_BROWSER=on
      - MINIO_DOMAIN=
      - MINIO_SERVER_URL=https://
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: sh
    command: -c 'minio server /data --console-address :9001'
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - storage-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  storage-data:
  database-data:
